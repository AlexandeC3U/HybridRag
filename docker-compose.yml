version: '3.8'

services:
  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.15-community
    container_name: uns-neo4j
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474"
      - "${NEO4J_BOLT_PORT:-7687}:7687"
    environment:
      - NEO4J_AUTH=${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-uns_password}
      - NEO4J_PLUGINS=["n10s"]
      - NEO4J_dbms_security_procedures_unrestricted=n10s.*
      - NEO4J_dbms_security_procedures_allowlist=n10s.*
      - NEO4J_dbms_memory_heap_initial_size=512m
      - NEO4J_dbms_memory_heap_max_size=1G
      - NEO4J_dbms_memory_pagecache_size=256m
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_plugins:/plugins
      - ./neo4j/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "${NEO4J_USER:-neo4j}", "-p", "${NEO4J_PASSWORD:-uns_password}", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - uns-network

  # InfluxDB Time-Series Database
  influxdb:
    image: influxdb:2.7
    container_name: uns-influxdb
    ports:
      - "${INFLUXDB_PORT:-8086}:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USER:-admin}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD:-uns_password}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG:-UNS}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET:-sensor_data}
      - DOCKER_INFLUXDB_INIT_RETENTION=${INFLUXDB_RETENTION:-30d}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN:-uns_admin_token_change_me}
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    healthcheck:
      test: ["CMD", "influx", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - uns-network

  # MQTT Broker
  emqx:
    image: emqx/emqx:latest
    container_name: uns-mqtt
    ports:
      - "${MQTT_PORT:-1883}:1883"
      - "${MQTT_WS_PORT:-9001}:9001"
    volumes:
      - ./emqx/config:/opt/emqx/etc
      - ./emqx/data:/opt/emqx/data
      - ./emqx/log:/opt/emqx/log
    healthcheck:
      test: ["CMD", "emqx_ctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - uns-network

  # Grafana for Visualization
  grafana:
    image: grafana/grafana:10.2.0
    container_name: uns-grafana
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-uns_password}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - influxdb
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - uns-network

  # UNS API Service
  uns-api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: uns-api
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-uns_password}
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-uns_admin_token_change_me}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-UNS}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-sensor_data}
      - MQTT_BROKER=emqx
    depends_on:
      neo4j:
        condition: service_healthy
      influxdb:
        condition: service_healthy
      emqx:
        condition: service_healthy
    volumes:
      - ./api:/app
      - ./data:/app/data
    restart: unless-stopped
    networks:
      - uns-network

  # Data Simulator
  data-simulator:
    build:
      context: ./simulator
      dockerfile: Dockerfile
    container_name: uns-simulator
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-uns_password}
      - MQTT_BROKER=emqx
    depends_on:
      neo4j:
        condition: service_healthy
      emqx:
        condition: service_healthy
    volumes:
      - ./simulator:/app
    restart: unless-stopped
    networks:
      - uns-network

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_plugins:
  influxdb_data:
  influxdb_config:
  grafana_data:

networks:
  uns-network:
    driver: bridge